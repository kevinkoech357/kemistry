"""empty message

Revision ID: 11bd8a6531d2
Revises: 30de26177e3e
Create Date: 2024-02-26 11:29:29.795017

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "11bd8a6531d2"
down_revision = "30de26177e3e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("post", schema=None) as batch_op:
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )

    with op.batch_alter_table("role", schema=None) as batch_op:
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )

    with op.batch_alter_table("role", schema=None) as batch_op:
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )

    with op.batch_alter_table("post", schema=None) as batch_op:
        batch_op.alter_column(
            "updated_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )
        batch_op.alter_column(
            "created_at",
            existing_type=postgresql.TIMESTAMP(timezone=True),
            nullable=True,
        )

    # ### end Alembic commands ###
